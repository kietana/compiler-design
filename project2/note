Changes made on lex.l
- Change file name: lex.l to st.l (st stands for simple turing)
- Include "y.tab.h" in st.l
- Include "union.h"
- Return token instead of print
- Remove symbol table implementation in st.l, insert symbol will be done in parser
- BEGIN keyword in simple turing is made as ST_BEGIN as there is an error that might be a conflict with lex macro BEGIN
- Directly return the single character token (ex: delimiters) as char 

Changes made on symboltable.h
- Modify Symbol struct to have `type`, `category`, `symbolVal`, `hasValue` to store relevant info
- Change hash implementation to fixed array (easier implementation)
- Modify insert function: insert(name) to insert(symbol)
- Add new functions to support stack (for scope handling)
- New function: init() to initialize a new table

Create union.h:
- Add enum to ease type decision
- Add union to store values with different type

Others:
https://stackoverflow.com/questions/20106574/simple-yacc-grammars-give-an-error
https://stackoverflow.com/questions/7639922/yacc-field-has-incomplete-type